<deployment-project plugin="plugin.ezdeploy" plugin-version="1.0">
  <configuration build-checksum="3742954482" file="/data/project/CAMRIE/matlab/MCC/camrie.prj" location="/data/project/CAMRIE/matlab/MCC" name="camrie" preferred-package-location="/data/project/CAMRIE/matlab/MCC/camrie/for_redistribution" preferred-package-type="package.type.install" target="target.ezdeploy.standalone" target-name="Application Compiler">
    <param.appname>camrie</param.appname>
    <param.icon />
    <param.icons />
    <param.version>1.1</param.version>
    <param.authnamewatermark>Eros Montin</param.authnamewatermark>
    <param.email>eros.montin@gmail.com</param.email>
    <param.company>NYU Langone</param.company>
    <param.summary>camrie allows you to simulate an MRI system</param.summary>
    <param.description>added the mat output file</param.description>
    <param.screenshot />
    <param.guid />
    <param.installpath.string>/NYU_Langone/camrie/</param.installpath.string>
    <param.installpath.combo>option.installpath.user</param.installpath.combo>
    <param.logo />
    <param.install.notes />
    <param.target.install.notes>In the following directions, replace MR/v96 by the directory on the target machine where MATLAB is installed, or MR by the directory where the MATLAB Runtime is installed.

(1) Set the environment variable XAPPLRESDIR to this value:

MR/v96/X11/app-defaults


(2) If the environment variable LD_LIBRARY_PATH is undefined, set it to the following:

MR/v96/runtime/glnxa64:MR/v96/bin/glnxa64:MR/v96/sys/os/glnxa64:MR/v96/sys/opengl/lib/glnxa64

If it is defined, set it to the following:

${LD_LIBRARY_PATH}:MR/v96/runtime/glnxa64:MR/v96/bin/glnxa64:MR/v96/sys/os/glnxa64:MR/v96/sys/opengl/lib/glnxa64</param.target.install.notes>
    <param.intermediate>${PROJECT_ROOT}/camrie/for_testing</param.intermediate>
    <param.files.only>${PROJECT_ROOT}/camrie/for_redistribution_files_only</param.files.only>
    <param.output>${PROJECT_ROOT}/camrie/for_redistribution</param.output>
    <param.logdir>${PROJECT_ROOT}/camrie</param.logdir>
    <param.enable.clean.build>false</param.enable.clean.build>
    <param.user.defined.mcr.options />
    <param.target.type>subtarget.standalone</param.target.type>
    <param.support.packages />
    <param.web.mcr>true</param.web.mcr>
    <param.package.mcr>false</param.package.mcr>
    <param.no.mcr>false</param.no.mcr>
    <param.web.mcr.name>MyAppInstaller_web</param.web.mcr.name>
    <param.package.mcr.name>MyAppInstaller_mcr</param.package.mcr.name>
    <param.no.mcr.name>MyAppInstaller_app</param.no.mcr.name>
    <param.windows.command.prompt>false</param.windows.command.prompt>
    <param.create.log>false</param.create.log>
    <param.log.file />
    <param.native.matlab>false</param.native.matlab>
    <param.checkbox>false</param.checkbox>
    <param.example />
    <param.help.text>Syntax 
	 camrie -? 
	 camrie jsonfile OutputJson logJson parentdir outputMat 
 Input Arguments 
	 -?  print help on how to use the application 
	 jsonfile OutputJson logJson parentdir outputMat  input arguments 
 Description 
 	 added the mat output file</param.help.text>
    <unset>
      <param.icon />
      <param.icons />
      <param.screenshot />
      <param.guid />
      <param.installpath.string />
      <param.installpath.combo />
      <param.logo />
      <param.install.notes />
      <param.intermediate />
      <param.files.only />
      <param.output />
      <param.logdir />
      <param.enable.clean.build />
      <param.user.defined.mcr.options />
      <param.target.type />
      <param.support.packages />
      <param.web.mcr />
      <param.package.mcr />
      <param.no.mcr />
      <param.web.mcr.name />
      <param.package.mcr.name />
      <param.no.mcr.name />
      <param.windows.command.prompt />
      <param.create.log />
      <param.log.file />
      <param.native.matlab />
      <param.checkbox />
      <param.example />
    </unset>
    <fileset.main>
      <file>/data/project/CAMRIE/matlab/WEBSERVER/camrie.m</file>
    </fileset.main>
    <fileset.resources>
      <file>/data/project/CAMRIE/matlab/WEBSERVER/GUI2014bEdit</file>
      <file>/data/project/CAMRIE/matlab/WEBSERVER/Utils</file>
      <file>/data/project/CAMRIE/matlab/WEBSERVER/classes</file>
    </fileset.resources>
    <fileset.package>
      <file>/data/project/CAMRIE/matlab/WEBSERVER/GUI2014bEdit</file>
    </fileset.package>
    <fileset.depfun />
    <build-deliverables>
      <file location="${PROJECT_ROOT}/camrie/for_testing" name="run_camrie.sh" optional="false">/data/project/CAMRIE/matlab/MCC/camrie/for_testing/run_camrie.sh</file>
      <file location="${PROJECT_ROOT}/camrie/for_testing" name="camrie" optional="false">/data/project/CAMRIE/matlab/MCC/camrie/for_testing/camrie</file>
      <file location="${PROJECT_ROOT}/camrie/for_testing" name="readme.txt" optional="true">/data/project/CAMRIE/matlab/MCC/camrie/for_testing/readme.txt</file>
      <file location="${PROJECT_ROOT}/camrie/for_testing" name="splash.png" optional="false">/data/project/CAMRIE/matlab/MCC/camrie/for_testing/splash.png</file>
    </build-deliverables>
    <workflow />
    <matlab>
      <root>/data/software/MATLAB2019a</root>
      <toolboxes>
        <toolbox name="neuralnetwork" />
      </toolboxes>
      <toolbox>
        <neuralnetwork>
          <enabled>true</enabled>
        </neuralnetwork>
      </toolbox>
    </matlab>
    <platform>
      <unix>true</unix>
      <mac>false</mac>
      <windows>false</windows>
      <win2k>false</win2k>
      <winxp>false</winxp>
      <vista>false</vista>
      <linux>true</linux>
      <solaris>false</solaris>
      <osver>4.13.0-45-generic</osver>
      <os32>false</os32>
      <os64>true</os64>
      <arch>glnxa64</arch>
      <matlab>true</matlab>
    </platform>
  </configuration>
</deployment-project>